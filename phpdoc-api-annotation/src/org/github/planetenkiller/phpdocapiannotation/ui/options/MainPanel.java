package org.github.planetenkiller.phpdocapiannotation.ui.options;

import javax.swing.DefaultListModel;
import org.github.planetenkiller.phpdocapiannotation.ApiWarningHighlitingTask;
import org.openide.util.NbPreferences;

final class MainPanel extends javax.swing.JPanel {

    private final MainOptionsPanelController controller;
    private DefaultListModel classPrefixesListModel;

    MainPanel(MainOptionsPanelController controller) {
        this.controller = controller;
        classPrefixesListModel = new DefaultListModel();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHead = new javax.swing.JLabel();
        lblFooter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listClassPrefixes = new javax.swing.JList();
        txtClassPrefix = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(lblHead, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.lblHead.text"), new Object[] {})); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblFooter, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.lblFooter.text"), new Object[] {})); // NOI18N

        listClassPrefixes.setModel(classPrefixesListModel);
        jScrollPane1.setViewportView(listClassPrefixes);

        txtClassPrefix.setText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.txtClassPrefix.text"), new Object[] {})); // NOI18N
        txtClassPrefix.setToolTipText(java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.txtClassPrefix.toolTipText"), new Object[] {})); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnAdd, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.btnAdd.text"), new Object[] {})); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnRemove, java.text.MessageFormat.format(java.util.ResourceBundle.getBundle("org/github/planetenkiller/phpdocapiannotation/ui/options/Bundle").getString("MainPanel.btnRemove.text"), new Object[] {})); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addComponent(lblFooter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtClassPrefix, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdd))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHead, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHead)
                    .addComponent(btnRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClassPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String classPrefix = txtClassPrefix.getText();
        
        if(classPrefix != null && !classPrefix.isEmpty()) {
            classPrefixesListModel.addElement(classPrefix);
            controller.changed();
            txtClassPrefix.setText("");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        Object selectedClassPrefix = listClassPrefixes.getSelectedValue();
        
        if(selectedClassPrefix != null) {
            classPrefixesListModel.removeElement(selectedClassPrefix);
            controller.changed();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    void load() {
        classPrefixesListModel.clear();
        
        String classPrefixes = NbPreferences.forModule(ApiWarningHighlitingTask.class).get("classPrefixes", null);
        
        if(classPrefixes != null) {
            for(String classPrefix : classPrefixes.split(",")) {
                classPrefixesListModel.addElement(classPrefix);
            }
        }
    }

    void store() {
        String classPrefixes = "";
        
        boolean firstIteration = true;
        for(Object classPrefix : classPrefixesListModel.toArray()) {
            classPrefixes += (firstIteration? "": ",") + classPrefix;
            
            firstIteration = false;
        }
        
        NbPreferences.forModule(ApiWarningHighlitingTask.class).put("classPrefixes", classPrefixes);
    }

    boolean valid() {
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFooter;
    private javax.swing.JLabel lblHead;
    private javax.swing.JList listClassPrefixes;
    private javax.swing.JTextField txtClassPrefix;
    // End of variables declaration//GEN-END:variables
}
